getwd()
library(data.table)
census1 = fread('ss16pusa.csv')
census1 = census1[,c("ST","ADJINC","FOD1P","SCH","SCHG","SCHL","INDP","NAICSP","SEX","RAC1P","PINCP","AGEP","CITWP","COW","SERIALNO")]
census2 = fread('ss16pusb.csv')
census2 = census2[,c("ST","ADJINC","FOD1P","SCH","SCHG","SCHL","INDP","NAICSP","SEX","RAC1P","PINCP","AGEP","CITWP","COW","SERIALNO")]
census3 = fread('ss16pusc.csv')
census3 = census3[,c("ST","ADJINC","FOD1P","SCH","SCHG","SCHL","INDP","NAICSP","SEX","RAC1P","PINCP","AGEP","CITWP","COW","SERIALNO")]
census4 = fread('ss16pusd.csv')
census4 = census4[,c("ST","ADJINC","FOD1P","SCH","SCHG","SCHL","INDP","NAICSP","SEX","RAC1P","PINCP","AGEP","CITWP","COW","SERIALNO")]
census = rbind(census1, census2, census3, census4)
census = census[!is.na(census$FOD1P),]
census$survey_year <-substr(census$SERIALNO,1,4)
census$survey_year <- as.numeric(census$survey_year)
census$college_year<-census$survey_year - census$AGEP + 18
census = census[,c("ST","ADJINC","FOD1P","SCH","SCHG","SCHL","INDP","NAICSP","SEX","RAC1P","PINCP","AGEP","CITWP","COW","survey_year", "college_year")]
state <- read.csv("us-state-ansi-fips.csv")
state <- read.csv("us-state-ansi-fips.csv")
colnames(state)[2] <- "ST"
census <- merge(x = census, y = state, by = "ST", all.x = TRUE)
census$income_2016 <- census$ADJINC*0.000001*census$PINCP
census = census[,c("ST","FOD1P","SCH","SCHG","SCHL","INDP","NAICSP","SEX","RAC1P","AGEP","COW","survey_year", "college_year", "stname", "stusps", "income_2016")]
library(data.table)
admin = fread('adm2016.csv')
code = fread('ipeds.csv')
sum(is.na(admin$APPLCN) == T)
sum(is.na(admin$ADMSSN) == T)
sum(is.na(admin$ENRLT) == T)
adm = admin[,c("UNITID","APPLCN","ADMSSN","ENRLT")]
adm_location = merge(adm, code, by.x = "UNITID", by.y = "V1")
adm_location = na.omit(adm_location)
adm_state = aggregate(adm_location[,c("APPLCN", "ADMSSN", "ENRLT")], by=list(adm_location$state), FUN=sum, na.rm=TRUE)
View(adm_location)
adm_state = aggregate(adm_location[,c("APPLCN", "ADMSSN", "ENRLT")], by=list(adm_location$V4), FUN=sum, na.rm=TRUE)
View(adm_state)
names(adm_state)[1]<-"STATE"
adm_state$ADMRATE = adm_state$ADMSSN / adm_state$APPLCN
adm_state$ENRRATE = adm_state$ENRLT / adm_state$ADMSSN
dim(census)
summary(census)
library(ggplot2)
ggplot(census, aes(x=stusps)) + geom_bar(aes(y = ..count..))+ labs(x='state', y = 'count')
ggplot(census, aes(x=SEX)) + geom_bar(aes(y = ..count..))+ labs(x='gender', y = 'count')+ scale_x_discrete(limits=c(1, 2), labels=c("male", "female"))
ggplot(census, aes(x=RAC1P)) + geom_bar(aes(y = (..count..)/sum(..count..)))+ labs(x='race', y = 'count')+ scale_x_discrete(limits=c(1,2,3,4,5,6,7,8,9), labels=c("White", "Black","American Indian", "Alaska Native", "American Indian and Alaska Native", "Asian", "Pacific Islander", "Some Other Race", "Two or More Races"))
library(dplyr)
census %>%
group_by(RAC1P) %>%
summarise (n = n()) %>%
mutate(freq = n / sum(n))
hist(census$income_2016, breaks = 80)
hist(census$AGEP)
hist(census$college_year)
hist(census$income_2016, breaks = 80, xlab="adjusted income"", main=”Distribution of Income”)
```
hist(census$income_2016, breaks = 80, xlab="adjusted income", main="Distribution of Income")
hist(census$income_2016, breaks = 80, xlab="adjusted income", main="Distribution of Income")
hist(census$AGEP, xlab="age", main="Distribution of Age"))
hist(census$AGEP, xlab="age", main="Distribution of Age")
hist(census$college_year, xlab="college year", main="Distribution of College Year")
ggplot(census, aes(x=stusps, y=income_2016)) + stat_summary(fun.y="mean", geom="bar") + labs(x='state', y = 'average income')
ggplot(census, aes(x=AGEP, y=income_2016)) + stat_summary(fun.y="mean", geom="bar") + labs(x='age', y = 'average income')
ggplot(census, aes(x=SEX, y=income_2016)) + stat_summary(fun.y="mean", geom="bar") + scale_x_discrete(limits=c(1, 2), labels=c("male", "female")) + labs(x='gender', y = 'average income')
ggplot(census, aes(x=RAC1P, y=income_2016)) + stat_summary(fun.y="mean", geom="bar") + scale_x_discrete(limits=c(1, 2,3,4,5,6,7,8,9), labels=c("White", "Black","American Indian", "Alaska Native", "American Indian and Alaska Native", "Asian", "Pacific Islander", "Some Other Race", "Two or More Races")) + labs(x='Race', y = 'average income')
summary(adm_state)
which.max( adm_state[,2] )
colMax(adm_state)
print(colMax)
apply(adm_state, 2, function(x) max(x, na.rm = TRUE))
summary(adm_state)
row.names(adm_state) = adm_state$STATE
which.max( adm_state[,2] )
colMax(adm_state)
apply(adm_state, 2, function(x) max(x, na.rm = TRUE))
list(max(adm_state[,"APPLCN"]), adm_state[which.max(adm_state[,"APPLCN"]), "STATE"])
list(min(adm_state[,"APPLCN"]), adm_state[which.min(adm_state[,"APPLCN"]), "STATE"])
list(max(adm_state[,"ADMSSN"]), adm_state[which.max(adm_state[,"ADMSSN"]), "STATE"])
list(min(adm_state[,"ADMSSN"]), adm_state[which.min(adm_state[,"ADMSSN"]), "STATE"])
list(max(adm_state[,"APPLCN"]), adm_state[which.max(adm_state[,"APPLCN"]), "STATE"])
list(min(adm_state[,"APPLCN"]), adm_state[which.min(adm_state[,"APPLCN"]), "STATE"])
list(max(adm_state[,"ADMSSN"]), adm_state[which.max(adm_state[,"ADMSSN"]), "STATE"])
list(min(adm_state[,"ADMSSN"]), adm_state[which.min(adm_state[,"ADMSSN"]), "STATE"])
list(max(adm_state[,"ENRLT"]), adm_state[which.max(adm_state[,"ENRLT"]), "STATE"])
list(min(adm_state[,"ENRLT"]), adm_state[which.min(adm_state[,"ENRLT"]), "STATE"])
list(max(adm_state[,"ADMRATE"]), adm_state[which.max(adm_state[,"ADMRATE"]), "STATE"])
list(min(adm_state[,"ADMRATE"]), adm_state[which.min(adm_state[,"ADMRATE"]), "STATE"])
list(max(adm_state[,"ENRRATE"]), adm_state[which.max(adm_state[,"ENRRATE"]), "STATE"])
list(min(adm_state[,"ENRRATE"]), adm_state[which.min(adm_state[,"ENRRATE"]), "STATE"])
histogram(adm_state$APPLCN)
hist(adm_state$APPLCN)
hist(adm_state$ADMSSN)
hist(adm_state$ENRLT)
hist(adm_state$ENRRATE)
ggplot(adm_state, aes(x=STATE)) + geom_bar(aes(y = ..count..))+ labs(x='state', y = 'count')
hist(adm_state$APPLCN)
hist(adm_state$APPLCN, xlab="Application", main="Distribution of College Application")
list(max(adm_state[,"APPLCN"]), adm_state[which.max(adm_state[,"APPLCN"]), "STATE"])
list(min(adm_state[,"APPLCN"]), adm_state[which.min(adm_state[,"APPLCN"]), "STATE"])
list(max(adm_state[,"ADMSSN"]), adm_state[which.max(adm_state[,"ADMSSN"]), "STATE"])
list(min(adm_state[,"ADMSSN"]), adm_state[which.min(adm_state[,"ADMSSN"]), "STATE"])
list(max(adm_state[,"ENRLT"]), adm_state[which.max(adm_state[,"ENRLT"]), "STATE"])
list(max(adm_state[,"ENRLT"]), adm_state[which.max(adm_state[,"ENRLT"]), "STATE"])
list(max(adm_state[,"APPLCN"]), adm_state[which.max(adm_state[,"APPLCN"]), "STATE"])
list(min(adm_state[,"APPLCN"]), adm_state[which.min(adm_state[,"APPLCN"]), "STATE"])
list(max(adm_state[,"ADMSSN"]), adm_state[which.max(adm_state[,"ADMSSN"]), "STATE"])
list(min(adm_state[,"ADMSSN"]), adm_state[which.min(adm_state[,"ADMSSN"]), "STATE"])
list(max(adm_state[,"ENRLT"]), adm_state[which.max(adm_state[,"ENRLT"]), "STATE"])
list(min(adm_state[,"ENRLT"]), adm_state[which.min(adm_state[,"ENRLT"]), "STATE"])
list(max(adm_state[,"ADMRATE"]), adm_state[which.max(adm_state[,"ADMRATE"]), "STATE"])
list(min(adm_state[,"ADMRATE"]), adm_state[which.min(adm_state[,"ADMRATE"]), "STATE"])
list(max(adm_state[,"ENRRATE"]), adm_state[which.max(adm_state[,"ENRRATE"]), "STATE"])
list(min(adm_state[,"ENRRATE"]), adm_state[which.min(adm_state[,"ENRRATE"]), "STATE"])
name = names(adm_location)
UNITID = 'Unique identification number of the institution used by the NCES'
APPLCN = 'Total number of applicants for each university'
ADMSSN = 'Total number of admissions provided by each university'
ENRLT = 'Total number of enrollments for each university'
des = c(UNITID,APPLCN,ADMSSN,ENRLT)
library(DT)
des_table = datatable(cbind(name,des))
des_table
